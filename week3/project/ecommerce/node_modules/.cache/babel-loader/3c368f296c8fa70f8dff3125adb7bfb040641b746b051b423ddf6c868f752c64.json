{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/reactWorkSpace/React-class44/week2/project/ecommerce/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport CategoryList from \"../components/CategoryList\";\nimport ProductList from \"../components/ProductList\";\nimport { fetchData } from \"../helpers/fetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  // I fetch categories here because I dont need to fetch it each time when CategoryList rendered.\n  let categories;\n  useEffect(() => {\n    fetchData(\"https://fakestoreapi.com/products/categories\").then(result => {\n      console.log(categories, \"hhhhhhhshshshshshs\");\n      categories = result;\n    });\n  }, []);\n  console.log(categories);\n  const [currentCategory, setCurrentCategory] = useState(\"all\");\n  const handleCategoryClick = event => {\n    const categoryName = event.target.title.replace(\"FAKE: \", \"\");\n    if (!(currentCategory === categoryName)) {\n      setCurrentCategory(event.target.title);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n      categories: categories,\n      handleCategoryClick: handleCategoryClick,\n      currentCategory: currentCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      currentCategory: currentCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"IxVeCmDZa5Hq3WgBl2y3TjP2O+Q=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Header","CategoryList","ProductList","fetchData","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","categories","then","result","console","log","currentCategory","setCurrentCategory","handleCategoryClick","event","categoryName","target","title","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hackyourfuture/Desktop/reactWorkSpace/React-class44/week2/project/ecommerce/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport CategoryList from \"../components/CategoryList\";\nimport ProductList from \"../components/ProductList\";\nimport { fetchData } from \"../helpers/fetchHelper\";\n\nexport default function HomePage() {\n  // I fetch categories here because I dont need to fetch it each time when CategoryList rendered.\n  let categories;\n  useEffect(() => {\n    fetchData(\"https://fakestoreapi.com/products/categories\").then((result) => {\n      console.log(categories, \"hhhhhhhshshshshshs\");\n      categories = result;\n    });\n  }, []);\n  console.log(categories);\n\n  const [currentCategory, setCurrentCategory] = useState(\"all\");\n\n  const handleCategoryClick = (event) => {\n    const categoryName = event.target.title.replace(\"FAKE: \", \"\");\n    if (!(currentCategory === categoryName)) {\n      setCurrentCategory(event.target.title);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <CategoryList\n        categories={categories}\n        handleCategoryClick={handleCategoryClick}\n        currentCategory={currentCategory}\n      />\n      <ProductList currentCategory={currentCategory} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,IAAIC,UAAU;EACdX,SAAS,CAAC,MAAM;IACdI,SAAS,CAAC,8CAA8C,CAAC,CAACQ,IAAI,CAAEC,MAAM,IAAK;MACzEC,OAAO,CAACC,GAAG,CAACJ,UAAU,EAAE,oBAAoB,CAAC;MAC7CA,UAAU,GAAGE,MAAM;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EAEvB,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMmB,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC7D,IAAI,EAAEP,eAAe,KAAKI,YAAY,CAAC,EAAE;MACvCH,kBAAkB,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACxC;EACF,CAAC;EACD,oBACEhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACL,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACJ,YAAY;MACXS,UAAU,EAAEA,UAAW;MACvBO,mBAAmB,EAAEA,mBAAoB;MACzCF,eAAe,EAAEA;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFtB,OAAA,CAACH,WAAW;MAACa,eAAe,EAAEA;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjD,CAAC;AAEP;AAAClB,EAAA,CA9BuBD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}